yarn run v1.22.21
$ cross-env DEBUG=localfirst*,automerge* DEBUG_COLORS=1 pnpm test run SyncServer ./scripts/log.js

> @localfirst/auth-monorepo@5.1.1 test /Users/herbcaudill/Code/local-first-web/auth
> vitest "run" "SyncServer" "./scripts/log.js"


 RUN  v0.34.6 /Users/herbcaudill/Code/local-first-web/auth

  [33;1mlocalfirst:auth-provider:localhost [0minstantiating { userName: 'localhost', deviceId: 'localhost' } [33m+0ms[0m
  [32;1mlocalfirst:auth-provider:alice [0minstantiating { userName: 'alice', deviceId: 'lw6clfv82tplghvgxw81qrgs' } [32m+0ms[0m
  [32;1mlocalfirst:auth-provider:alice [0madding team 'team A' [32m+7ms[0m
  [36;1mautomerge-repo:websocket:browser:ws://localhost:3100 [0mconnecting [36m+0ms[0m
  [32;1mlocalfirst:auth-provider:alice [0mcreateConnectionsForShare AEogfg3UhSUbg9mzRSEiCfzriGjLCJ8R2S21gyKNwc46 [32m+4ms[0m
  [32;1mlocalfirst:auth-provider:alice [0mcreating connections for [] [32m+0ms[0m
  [31;1mautomerge-repo:network:localhost [0mAdapters ready:  1 / 1 [31m+0ms[0m
  [36;1mautomerge-repo:websocket:browser:ws://localhost:3100 [0mopen [36m+12ms[0m
  [33;1mlocalfirst:auth-provider:localhost [0mpeer-candidate 'lw6clfv82tplghvgxw81qrgs' [33m+29ms[0m
  [32;1mlocalfirst:auth:syncserver [0mGET /keys {} [32m+0ms[0m
stdout | packages/auth-syncserver/src/test/SyncServer.test.ts > Alice can create a team
hashing shareId AEogfg3UhSUbg9mzRSEiCfzriGjLCJ8R2S21gyKNwc46

  [36;1mautomerge-repo:websocket:browser:ws://localhost:3100 [0mpeer: localhost [36m+5ms[0m
  [31;1mautomerge-repo:network:lw6clfv82tplghvgxw81qrgs [0mAdapters ready:  1 / 1 [31m+0ms[0m
  [32;1mlocalfirst:auth-provider:alice [0mpeer-candidate 'localhost' [32m+15ms[0m
  [32;1mlocalfirst:auth-provider:alice [0msending join message { type: 'join-shares', senderId: 'lw6clfv82tplghvgxw81qrgs', targetId: 'localhost', shareIdHashes: [ Uint8Array(32) [ 22,...] } [32m+0ms[0m
  [33;1mlocalfirst:auth-provider:localhost [0mmessage from adapter { type: 'join-shares', senderId: 'lw6clfv82tplghvgxw81qrgs', targetId: 'localhost', shareIdHashes: [ <Buffer 16 fc 82 be ...> ] } [33m+13ms[0m
  [33;1mlocalfirst:auth-provider:localhost [0mreceived join message { type: 'join-shares', senderId: 'lw6clfv82tplghvgxw81qrgs', targetId: 'localhost', shareIdHashes: [ <Buffer 16 fc 82 be ...> ] } [33m+0ms[0m
  [32;1mlocalfirst:auth:syncserver [0mPOST /teams { serializedGraph: { '0': 222, '1': 0, ...}, teamKeyring: { '4r6pPif7EBWeupGR2eHhWYKRuUtd99nQwK1bCRC3wbta': { type: 'TEAM', name: 'TEAM', generation: 0, signature: [Object], encryption: [Object], secretKey: '6SD5mAxQqDi4gKbr68UZmqn7Jyt3pWNH5kBgfGwQNbRo' } } } [32m+18ms[0m
  [33;1mlocalfirst:auth-provider:localhost [0madding team 'team A' [33m+19ms[0m
  [33;1mlocalfirst:auth-provider:localhost [0mcreateConnectionsForShare AEogfg3UhSUbg9mzRSEiCfzriGjLCJ8R2S21gyKNwc46 [33m+3ms[0m
  [33;1mlocalfirst:auth-provider:localhost [0mcreating connections for [ 'lw6clfv82tplghvgxw81qrgs' ] [33m+0ms[0m
  [33;1mlocalfirst:auth-provider:localhost [0msending join message { type: 'join-shares', senderId: 'localhost', targetId: 'lw6clfv82tplghvgxw81qrgs', shareIdHashes: [ Uint8Array(32) [ 22,...] } [33m+0ms[0m
  [33;1mlocalfirst:auth-provider:localhost [0mmaybe creating connection { shareId: 'AEogfg3UhSUbg9mzRSEiCfzriGjLCJ8R2S21gyKNwc46', peerId: 'lw6clfv82tplghvgxw81qrgs', peerHasShare: false, connectionAlreadyExists: false } [33m+1ms[0m
  [33;1mlocalfirst:auth-provider:localhost [0mcreating connection { shareId: 'AEogfg3UhSUbg9mzRSEiCfzriGjLCJ8R2S21gyKNwc46', peerId: 'lw6clfv82tplghvgxw81qrgs' } [33m+0ms[0m
  [33;1mlocalfirst:auth-provider:localhost [0msetting connection { shareId: 'AEogfg3UhSUbg9mzRSEiCfzriGjLCJ8R2S21gyKNwc46', peerId: 'lw6clfv82tplghvgxw81qrgs' } [33m+2ms[0m
  [36;1mlocalfirst:auth:connection:localhost [0mstarting [36m+0ms[0m
  [36;1mlocalfirst:auth:connection:localhost [0memit change 'awaitingIdentityClaim' [36m+3ms[0m
  [36;1mlocalfirst:auth:connection:localhost [0mxstate.init  ⏩ awaitingIdentityClaim  [36m+0ms[0m
  [36;1mlocalfirst:message-queue [0mprocessInbound [36m+0ms[0m
  [36;1mlocalfirst:message-queue [0mprocessOutbound [36m+0ms[0m
  [36;1mlocalfirst:message-queue [0msend { type: 'REQUEST_IDENTITY', index: 0 } [36m+0ms[0m
  [36;1mlocalfirst:auth:connection:localhost [0m->? #0 REQUEST_IDENTITY  [36m+0ms[0m
  [32;1mlocalfirst:auth-provider:alice [0mmessage from adapter { type: 'join-shares', senderId: 'localhost', targetId: 'lw6clfv82tplghvgxw81qrgs', shareIdHashes: [ Uint8Array(32) [ 22,...] } [32m+41ms[0m
  [32;1mlocalfirst:auth-provider:alice [0mreceived join message { type: 'join-shares', senderId: 'localhost', targetId: 'lw6clfv82tplghvgxw81qrgs', shareIdHashes: [ Uint8Array(32) [ 22,...] } [32m+0ms[0m
  [32;1mlocalfirst:auth-provider:alice [0mmessage from adapter { type: 'auth', senderId: 'localhost', targetId: 'lw6clfv82tplghvgxw81qrgs', payload: { shareId: 'AEogfg3UhSUbg9mzRSEiCfzriGjLCJ8R2S21gyKNwc46', serializedConnectionMessage: Uint8Array(32) [ 222...] } } [32m+0ms[0m
Cancelling test run. Press CTRL+c again to exit forcefully.

 ELIFECYCLE  Test failed. See above for more details.
error Command failed with exit code 1.
info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.
