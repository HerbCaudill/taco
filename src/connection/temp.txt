bob: ACTION sendHello user,device,invitationSecretKey

charlie: ACTION sendHello user,device,invitationSecretKey

deliver to charlie {
  type: 'HELLO',
  payload: {
    identityClaim: { type: 'MEMBER', name: 'bob' },
    proofOfInvitation: {
      id: '7CH82v0c8wjy3F5',
      type: 'MEMBER',
      payload: [Object],
      signature: 'MkSuE8VUWpPzFcG2Bl/aX63FaY8yqb6Ayx/QsuAPWZ2vyC6vIPT2IEL1wxCJTuQDYD/XYaXc28hKD9u85Mg/DQ=='
    }
  }
}

charlie: GUARD bothHaveInvitation user,device,invitationSecretKey

charlie: GUARD iHaveInvitation user,device,invitationSecretKey

charlie: GUARD theyHaveInvitation user,device,invitationSecretKey

console.error "Can't connect; neither one of us is a member",

deliver to bob {
  type: 'HELLO',
  payload: {
    identityClaim: { type: 'MEMBER', name: 'charlie' },
    proofOfInvitation: {
      id: 'UsdM/C73R+Daj69',
      type: 'MEMBER',
      payload: [Object],
      signature: '1zyZv4b7i6uruCKF6/ro4LRDeW5QLB84xyAlqQ1UUCMBfS6R9Y4GBCYOCh+kdneGVIaalcwjdqxonPVOGlb4Bg=='
    }
  }
}

bob: GUARD bothHaveInvitation user,device,invitationSecretKey

bob: GUARD iHaveInvitation user,device,invitationSecretKey

bob: GUARD theyHaveInvitation user,device,invitationSecretKey

console.error "Can't connect; neither one of us is a member",

deliver to bob {
  type: 'ERROR',
  payload: {
    message: "Can't connect; neither one of us is a member",
  }
}

bob: ACTION sendHello user,device,invitationSecretKey

deliver to charlie {
  type: 'ERROR',
  payload: {
    message: "Can't connect; neither one of us is a member",
  }
}

charlie: ACTION sendHello user,device,invitationSecretKey

deliver to charlie {
  type: 'HELLO',
  payload: {
    identityClaim: { type: 'MEMBER', name: 'bob' },
    proofOfInvitation: {
      id: '7CH82v0c8wjy3F5',
      type: 'MEMBER',
      payload: [Object],
      signature: 'MkSuE8VUWpPzFcG2Bl/aX63FaY8yqb6Ayx/QsuAPWZ2vyC6vIPT2IEL1wxCJTuQDYD/XYaXc28hKD9u85Mg/DQ=='
    }
  }
}

charlie: GUARD bothHaveInvitation user,device,invitationSecretKey

charlie: GUARD iHaveInvitation user,device,invitationSecretKey

charlie: GUARD theyHaveInvitation user,device,invitationSecretKey

console.error "Can't connect; neither one of us is a member",

deliver to bob {
  type: 'HELLO',
  payload: {
    identityClaim: { type: 'MEMBER', name: 'charlie' },
    proofOfInvitation: {
      id: 'UsdM/C73R+Daj69',
      type: 'MEMBER',
      payload: [Object],
      signature: '1zyZv4b7i6uruCKF6/ro4LRDeW5QLB84xyAlqQ1UUCMBfS6R9Y4GBCYOCh+kdneGVIaalcwjdqxonPVOGlb4Bg=='
    }
  }
}

bob: GUARD bothHaveInvitation user,device,invitationSecretKey

bob: GUARD iHaveInvitation user,device,invitationSecretKey

bob: GUARD theyHaveInvitation user,device,invitationSecretKey

console.error "Can't connect; neither one of us is a member",

deliver to bob {
  type: 'ERROR',
  payload: {
    message: "Can't connect; neither one of us is a member",
  }
}

bob: ACTION sendHello user,device,invitationSecretKey

deliver to charlie {
  type: 'ERROR',
  payload: {
    message: "Can't connect; neither one of us is a member",
  }
}

charlie: ACTION sendHello user,device,invitationSecretKey

deliver to charlie {
  type: 'HELLO',
  payload: {
    identityClaim: { type: 'MEMBER', name: 'bob' },
    proofOfInvitation: {
      id: '7CH82v0c8wjy3F5',
      type: 'MEMBER',
      payload: [Object],
      signature: 'MkSuE8VUWpPzFcG2Bl/aX63FaY8yqb6Ayx/QsuAPWZ2vyC6vIPT2IEL1wxCJTuQDYD/XYaXc28hKD9u85Mg/DQ=='
    }
  }
}

charlie: GUARD bothHaveInvitation user,device,invitationSecretKey

charlie: GUARD iHaveInvitation user,device,invitationSecretKey

charlie: GUARD theyHaveInvitation user,device,invitationSecretKey

console.error "Can't connect; neither one of us is a member",

deliver to bob {
  type: 'HELLO',
  payload: {
    identityClaim: { type: 'MEMBER', name: 'charlie' },
    proofOfInvitation: {
      id: 'UsdM/C73R+Daj69',
      type: 'MEMBER',
      payload: [Object],
      signature: '1zyZv4b7i6uruCKF6/ro4LRDeW5QLB84xyAlqQ1UUCMBfS6R9Y4GBCYOCh+kdneGVIaalcwjdqxonPVOGlb4Bg=='
    }
  }
}

bob: GUARD bothHaveInvitation user,device,invitationSecretKey

bob: GUARD iHaveInvitation user,device,invitationSecretKey

bob: GUARD theyHaveInvitation user,device,invitationSecretKey

console.error "Can't connect; neither one of us is a member",

deliver to bob {
  type: 'ERROR',
  payload: {
    message: "Can't connect; neither one of us is a member",
  }
}

bob: ACTION sendHello user,device,invitationSecretKey

deliver to charlie {
  type: 'ERROR',
  payload: {
    message: "Can't connect; neither one of us is a member",
  }
}

charlie: ACTION sendHello user,device,invitationSecretKey

deliver to charlie {
  type: 'HELLO',
  payload: {
    identityClaim: { type: 'MEMBER', name: 'bob' },
    proofOfInvitation: {
      id: '7CH82v0c8wjy3F5',
      type: 'MEMBER',
      payload: [Object],
      signature: 'MkSuE8VUWpPzFcG2Bl/aX63FaY8yqb6Ayx/QsuAPWZ2vyC6vIPT2IEL1wxCJTuQDYD/XYaXc28hKD9u85Mg/DQ=='
    }
  }
}

charlie: GUARD bothHaveInvitation user,device,invitationSecretKey

charlie: GUARD iHaveInvitation user,device,invitationSecretKey

charlie: GUARD theyHaveInvitation user,device,invitationSecretKey

console.error "Can't connect; neither one of us is a member",

deliver to bob {
  type: 'HELLO',
  payload: {
    identityClaim: { type: 'MEMBER', name: 'charlie' },
    proofOfInvitation: {
      id: 'UsdM/C73R+Daj69',
      type: 'MEMBER',
      payload: [Object],
      signature: '1zyZv4b7i6uruCKF6/ro4LRDeW5QLB84xyAlqQ1UUCMBfS6R9Y4GBCYOCh+kdneGVIaalcwjdqxonPVOGlb4Bg=='
    }
  }
}

bob: GUARD bothHaveInvitation user,device,invitationSecretKey

bob: GUARD iHaveInvitation user,device,invitationSecretKey

bob: GUARD theyHaveInvitation user,device,invitationSecretKey

console.error "Can't connect; neither one of us is a member",

deliver to bob {
  type: 'ERROR',
  payload: {
    message: "Can't connect; neither one of us is a member",
  }
}

bob: ACTION sendHello user,device,invitationSecretKey

deliver to charlie {
  type: 'ERROR',
  payload: {
    message: "Can't connect; neither one of us is a member",
  }
}

charlie: ACTION sendHello user,device,invitationSecretKey

deliver to charlie {
  type: 'HELLO',
  payload: {
    identityClaim: { type: 'MEMBER', name: 'bob' },
    proofOfInvitation: {
      id: '7CH82v0c8wjy3F5',
      type: 'MEMBER',
      payload: [Object],
      signature: 'MkSuE8VUWpPzFcG2Bl/aX63FaY8yqb6Ayx/QsuAPWZ2vyC6vIPT2IEL1wxCJTuQDYD/XYaXc28hKD9u85Mg/DQ=='
    }
  }
}

charlie: GUARD bothHaveInvitation user,device,invitationSecretKey

charlie: GUARD iHaveInvitation user,device,invitationSecretKey

charlie: GUARD theyHaveInvitation user,device,invitationSecretKey

console.error "Can't connect; neither one of us is a member",

deliver to bob {
  type: 'HELLO',
  payload: {
    identityClaim: { type: 'MEMBER', name: 'charlie' },
    proofOfInvitation: {
      id: 'UsdM/C73R+Daj69',
      type: 'MEMBER',
      payload: [Object],
      signature: '1zyZv4b7i6uruCKF6/ro4LRDeW5QLB84xyAlqQ1UUCMBfS6R9Y4GBCYOCh+kdneGVIaalcwjdqxonPVOGlb4Bg=='
    }
  }
}

bob: GUARD bothHaveInvitation user,device,invitationSecretKey

bob: GUARD iHaveInvitation user,device,invitationSecretKey

bob: GUARD theyHaveInvitation user,device,invitationSecretKey

console.error "Can't connect; neither one of us is a member",

deliver to bob {
  type: 'ERROR',
  payload: {
    message: "Can't connect; neither one of us is a member",
  }
}

bob: ACTION sendHello user,device,invitationSecretKey

deliver to charlie {
  type: 'ERROR',
  payload: {
    message: "Can't connect; neither one of us is a member",
  }
}

charlie: ACTION sendHello user,device,invitationSecretKey

deliver to charlie {
  type: 'HELLO',
  payload: {
    identityClaim: { type: 'MEMBER', name: 'bob' },
    proofOfInvitation: {
      id: '7CH82v0c8wjy3F5',
      type: 'MEMBER',
      payload: [Object],
      signature: 'MkSuE8VUWpPzFcG2Bl/aX63FaY8yqb6Ayx/QsuAPWZ2vyC6vIPT2IEL1wxCJTuQDYD/XYaXc28hKD9u85Mg/DQ=='
    }
  }
}

charlie: GUARD bothHaveInvitation user,device,invitationSecretKey

charlie: GUARD iHaveInvitation user,device,invitationSecretKey

charlie: GUARD theyHaveInvitation user,device,invitationSecretKey

console.error "Can't connect; neither one of us is a member",

  219 | 
  220 |   private fail = (message: string, details?: any) => {
> 221 |     console.error({ message, details })
      |             ^
  222 |     this.sendMessage({ type: 'ERROR', payload: { message, details } })
  223 |   }
  224 | 
